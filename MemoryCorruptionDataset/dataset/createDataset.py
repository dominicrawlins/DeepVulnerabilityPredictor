import os, sys
import csv

csv.field_size_limit(sys.maxsize)

static_file = "static_features.csv"
dynamic_file = "dynamic_features.csv"
vulnerable_programs = "vulnerable_programs.csv"

project_root_dir = os.path.expanduser("~/DeepVulnerabilityPredictor/")

sortoutlater = ['hhvm', 'libreoffice', 'curl', 'miniupnpd', 'libmodplug', 'kerberos']


def getLoc(xstr):
    x = xstr.split(":")[1].split("\n")[0].strip()
    x = x.replace("~", "/home/dom")
    return x


def createVulnProgramList():
    with open(vulnerable_programs, 'a') as vfile:
        for dir in (os.listdir(project_root_dir + 'MemoryCorruptionDataset/programs')):
            with open(project_root_dir + 'MemoryCorruptionDataset/programs/' + dir + '/details.txt', 'r') as dfile:
                loc = (list(map(lambda x: getLoc(x), list(filter(lambda x: "location" in x, list(dfile))))))[0]
                vfile.write(loc + "\n")


def createStaticFile():
    createFile(static_file, 'static')

def createDynamicFile():
    createFile(dynamic_file, 'dynamic')


def createFile(file, type):
    with open(file, 'a') as sfile:
        csvwriter = csv.writer(sfile, delimiter='\t')
        getFeaturesFromDir((project_root_dir + 'MemoryCorruptionDataset/programs/'), type, csvwriter)
        getFeaturesFromDir((project_root_dir + 'MemoryCorruptionDataset/normalPrograms/'), type, csvwriter)




def getFeaturesFromDir(dir, type, csvwriter):
    for progdir in os.listdir(dir):
        print(progdir)
        if(progdir not in sortoutlater):
            if(type == 'static'):
                path = dir +  progdir + "/" + progdir + "_" + type + ".csv"
            elif(type == 'dynamic'):
                path = dir +  progdir + "/dynamic/inputs/" + progdir + "_" + type + ".csv"
            with open(path) as csvfile:
                csvreader = csv.reader(csvfile, delimiter='\t')
                line = next(csvreader)
                csvwriter.writerow(line)


createVulnProgramList()
#createStaticFile()
#createDynamicFile()
