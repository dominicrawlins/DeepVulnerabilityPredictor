import os, subprocess


def getpin(dir, ddir, pinhome):
    otherfiles = list(map(lambda x: x.replace("file_", ""), list(filter(lambda x : "file" in x, (os.listdir(os.path.join(os.path.expanduser(dir), ddir, 'dynamic/inputs' )))))))
    argfiles = list(filter(lambda x: "symb" in x, (os.listdir(os.path.join(os.path.expanduser(dir), ddir, 'dynamic/inputs' )))))
    args = []
    for argfile in sorted(argfiles):
        with open((os.path.join(os.path.expanduser(dir), ddir, 'dynamic/inputs', argfile))) as file:
            arg = str(next(file)).strip()
            if(arg in otherfiles):
                arg = os.readlink(os.path.join(os.path.expanduser(dir), ddir, 'dynamic/inputs','file_'+ arg))
            args.append(arg)

    outfolder = os.path.join(os.path.expanduser('~/DeepVulnerabilityPredictor/data/pin'), ddir)
    if(not os.path.exists(outfolder)):
        os.mkdir(outfolder)
    with open(os.path.join(os.path.expanduser(dir), ddir, 'details.txt')) as detailsfile:
        location = (list(map(lambda x: x.split(":")[1].strip(), list(filter(lambda x: "location" in x, list(detailsfile))))))[0]
        subprocess.run([pinhome + '/pin', '-t', pinhome+'/source/tools/MyPinTool/obj-intel64/myPinTool.so',
                        '-o', outfolder+'/out', '--', location] + args)


def apply_pin(dir, pinhome):
    for ddir in os.listdir(os.path.expanduser(dir)):
        if(os.path.exists(os.path.join(os.path.expanduser(dir), ddir, 'dynamic'))):
            print(ddir)
            getpin(dir, ddir, pinhome)

pinhome = '/home/dom/pin-3.13-98189-g60a6ef199-gcc-linux'
dir = '~/DeepVulnerabilityPredictor/MemoryCorruptionDataset/normalPrograms'
apply_pin(dir, pinhome)
