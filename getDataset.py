from CVEScraper import CVEScraper
from CSVManipulator import CSVManipulator
from DataCreator import DataCreator
from NormalProgramCreator import NormalProgramCreator
import sys

def scrapeCVE():
    cves = CVEScraper(hide_scraping=True)
    cves.scrape()


def getMemCorrup():
    csvm = CSVManipulator("memoryCorruptions.csv")
    csvm.getVulnerabilities(name='CVE-2012-3410')
    vdict = csvm.getAllVendors(print=False)
    for (key, value) in sorted(vdict.items() ,  key=lambda x: x[1]  ):
        print(key , ":" , value)
    vulns = csvm.getVulnerabilitiesByVendor('Ubuntu Linux', print=False)
    vendors = ['Apple', 'Microsoft', 'Adobe', 'Mozilla', 'Linaro', 'Android', 'Cisco']
    vulns = csvm.vulnerabilitiesWithoutVendor(vendors, print=False)
    print(len(vulns))
    print(vulns[int(sys.argv[1])])

def createStatics():
    dc = DataCreator()
    dc.createFextractorStatic("~/MemoryCorruptionDataset/programs")


def createNormalPrograms():
    npc = NormalProgramCreator()
    mlist = txtToList(os.path.expanduser('~/MemoryCorruptionDataset/normalProgramList.txt'))
    npc.createDetailsFromList(programList = mlist)

def txtToList(txtfile):
    f = open(txtfile, 'r')
    lines = list(map(lambda x: x.strip(), f.readlines()))
    f.close()
    return line

createNormalPrograms()
